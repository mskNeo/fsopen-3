{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Persons.js","components/Notification.js","services/persons.js","App.js","index.js"],"names":["Filter","props","value","filter","onChange","handleChange","PersonForm","onSubmit","submit","name","nameChange","num","numChange","type","Persons","people","deleteFunc","peopleList","ele","toLowerCase","slice","length","map","d","key","id","number","onClick","Notification","message","className","baseUrl","personService","getAll","axios","get","then","response","data","create","newObject","post","update","newObj","put","deletePerson","delete","App","useState","persons","setPersons","newName","setNewName","newNum","setNewNum","setFilter","notification","setNotification","useEffect","handleNotification","setTimeout","event","target","preventDefault","personObject","find","window","confirm","updatedPerson","person","catch","error","console","log","returnedPerson","willDelete","p","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.16926001.chunk.js","sourcesContent":["import React from 'react'\n\nconst Filter = (props) => {\n  return (\n    <div>\n        filter shown with \n        <input \n          value={props.filter}\n          onChange={props.handleChange}\n        />\n      </div>\n  )\n}\n\nexport default Filter","import React from 'react'\n\nconst PersonForm = (props) => {\n  return (\n    <form onSubmit={props.submit}>\n      <div>\n        name: <input\n                value={props.name}\n                onChange={props.nameChange} />\n      </div>\n\n      <div>\n        number: <input\n                value={props.num}\n                onChange={props.numChange} />\n      </div>\n      \n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  )\n}\n\nexport default PersonForm","import React from 'react'\n\nconst Persons = ({people, filter, deleteFunc}) => {\n  \n  const filteredList = people.filter((ele) => ele.name.toLowerCase().slice(0, filter.length) === filter.toLowerCase())\n\n  const peopleList = filteredList.map((d) => {\n  return (\n    <div key={d.id}>\n      <p>\n        {d.name} {d.number}\n        <button onClick={() => deleteFunc(d.id)}>delete</button>\n      </p>\n    </div>\n  )})\n\n  return (\n    <div>\n      {peopleList}\n    </div>\n  )\n}\n\nexport default Persons","import React from 'react'\n\nfunction Notification({ message }) {\n  if (message === null) {\n    return null\n  }\n\n    return (\n      <div className={message.type}>\n        <h1>{message.message}</h1>\n      </div>\n    )\n}\n\nexport default Notification\n","import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject)\n  return request.then(response => response.data)\n}\n\nconst update = (id, newObj) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObj)\n  return request.then(response => response.data)}\n\nconst deletePerson = (id) => {\n  const request = axios.delete(`${baseUrl}/${id}`)\n  return request.then(response => response.data)\n}\n\nconst personService = { getAll, create, update, deletePerson }\n\nexport default personService\n","import React, { useState, useEffect } from 'react'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\nimport Notification from './components/Notification'\nimport personService from './services/persons'\nimport './style.css'\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [ newNum, setNewNum ] = useState('')\n  const [ filter, setFilter ] = useState('')\n  const [ notification, setNotification ] = useState(null)\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(people => {\n        setPersons(people)\n      })\n  }, [])\n\n  const handleNotification = (message, type='success') => {\n    setNotification({ message, type })\n    setTimeout(() => {\n      setNotification(null)\n    }, 5000)\n  }\n\n  const deletePerson = (id) => {\n    const willDelete = persons.find(person => person.id === id)\n    \n    if (window.confirm(`Delete ${willDelete.name}?`)) {\n      personService.deletePerson(id)\n        .then(response => {\n          setPersons(persons.filter(p => p.id !== id))\n          handleNotification(`Deleted ${willDelete.name}`)\n        })\n        .catch(() => {\n          setPersons(persons.filter(p => p.id !== id))\n          handleNotification(`${willDelete.name} not found in server`, 'error')\n        })\n    }\n  }\n\n  const handleSubmit = (event) => {\n    event.preventDefault()\n\n    const personObject = {\n      name: newName,\n      number: newNum\n    }\n\n    // check if name is in list already\n    let namePresent = persons.find((d) => d.name === newName)\n\n    if (namePresent) {\n      if (window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)) {\n        const updatedPerson = persons.find((d) => d.name === newName)\n        personService\n          .update(updatedPerson.id, personObject)\n          .then(updatedPerson => {\n            setPersons(persons.map(person => person.name !== newName ? person : updatedPerson))\n            handleNotification(`${updatedPerson.name} has a new number!`)\n            setNewName('')\n            setNewNum('')\n          })\n          .catch(error => {\n            console.log(error.response.data)\n            handleNotification(`${updatedPerson.name} not in server`, 'error')\n          })\n      }\n    } else {\n      personService\n        .create(personObject)\n        .then(returnedPerson => {\n          setPersons(returnedPerson)\n          handleNotification(`Added ${personObject.name}`)\n          setNewName('')\n          setNewNum('')\n        })\n        .catch(error => {\n          console.log(error.response.data)\n          handleNotification('Validation error: recheck input fields', 'error')\n        })\n    }\n  }\n\n  const handleNameChange = (event) => setNewName(event.target.value)\n\n  const handleNumChange = (event) => setNewNum(event.target.value)\n\n  const handleFilterChange = (event) => setFilter(event.target.value)\n\n  \n  return (\n    <div>\n      <h2>Phonebook</h2>\n\n      <Notification message={notification} />\n\n      <Filter \n        filter={filter} \n        handleChange={handleFilterChange} \n      />\n\n      <h2>add a new</h2>\n      <PersonForm\n        submit={handleSubmit}\n        name={newName}\n        nameChange={handleNameChange}\n        num={newNum}\n        numChange={handleNumChange}\n      />\n\n      <h2>Numbers</h2>\n      <Persons people={persons} filter={filter} deleteFunc={deletePerson} />\n    </div>\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}